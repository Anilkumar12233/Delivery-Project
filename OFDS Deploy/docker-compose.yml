services:
  mysql-db:
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: OFDS
    restart: on-failure
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - ofds-network

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    restart: on-failure
    networks:
      - ofds-network

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    restart: on-failure
    networks:
      - ofds-network

  eureka-server:
    image: public.ecr.aws/h0z1q9j6/anild12121/eureka-server:latest
    ports:
      - "8761:8761"
    restart: on-failure
    networks:
      - ofds-network

  restaurant-service:
    image: public.ecr.aws/h0z1q9j6/anild12121/restaurant-service:latest
    ports:
      - "8091:8091"
    depends_on:
      mysql-db:
        condition: service_healthy
    restart: on-failure
    networks:
      - ofds-network

  menu-service:
    image: public.ecr.aws/h0z1q9j6/anild12121/menu-service:latest
    ports:
      - "8092:8092"
    depends_on:
      restaurant-service:
        condition: service_started
      mysql-db:
        condition: service_healthy
    restart: on-failure
    networks:
      - ofds-network

  order-service:
    image: public.ecr.aws/h0z1q9j6/anild12121/order-service:latest
    ports:
      - "8083:8083"
    depends_on:
      mysql-db:
        condition: service_healthy
    restart: on-failure
    networks:
      - ofds-network

  payment-service:
    image: public.ecr.aws/h0z1q9j6/anild12121/payment-service:latest
    ports:
      - "8084:8084"
    depends_on:
      mysql-db:
        condition: service_healthy
    restart: on-failure
    networks:
      - ofds-network

  api-gateway:
    image: public.ecr.aws/h0z1q9j6/anild12121/api-gateway:latest
    ports:
      - "9090:9090"
    depends_on:
      menu-service:
        condition: service_started
      restaurant-service:
        condition: service_started
      order-service:
        condition: service_started
    restart: on-failure
    networks:
      - ofds-network

  frontend:
    image: public.ecr.aws/h0z1q9j6/anild12121/frontend-react:latest
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    restart: on-failure
    networks:
      - ofds-network

networks:
  ofds-network:
    driver: bridge
